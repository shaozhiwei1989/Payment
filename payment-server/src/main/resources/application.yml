spring:
  application:
    name: Payment

  ## kafka
  kafka:
    producer:
      bootstrap-servers: 127.0.0.1:9092
      retries: 3
      acks: 1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  ## datasource
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: jdbc:mysql://127.0.0.1:3306/payment?useUnicode=true&characterEncoding=utf-8
      username: root
      password: 123456
      initial-size: 50
      min-idle: 50
      max-active: 200
      # 配置获取连接等待超时的时间，单位是毫秒
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 用来检测连接是否有效的sql，要求是一个查询语句
      validation-query: SELECT 1
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      # max-pool-prepared-statement-per-connection-size: 50

      # 配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
      # 如果报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
      # 则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，比如不配置stat,我们在Druid的监控页面中就拿不到想要的信息。
      filters: stat,wall

      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

  ## spring data
  data:
    jdbc:
      dialect: MYSQL

dubbo:
  application:
    name: payment-server
  protocol:
    name: dubbo
    port: 30381
  registry:
    address: zookeeper://127.0.0.1:2181

producer:
  name: kafka_producer

mq-topic:
  pay: pay
  refund: refund








